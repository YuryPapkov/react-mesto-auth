{"version":3,"sources":["components/ProtectedRoute.js","images/close-icon.svg","images/yes.svg","images/no.svg","components/InfoTooltip.js","utils/Auth.js","utils/Validator.js","components/Login.js","components/Register.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/Api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ErrorPopup.js","components/App.js","serviceWorker.js","index.js"],"names":["ProtectedRoute","Component","component","props","loggedIn","to","InfoTooltip","isSuccess","isOpen","onClose","className","src","yesPath","noPath","alt","style","textAlign","type","onClick","closeButtonPath","BASE_URL","Validator","validationData","formElement","this","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_formElement","_getInputList","_getSubmitButtonElement","addEventListener","evt","preventDefault","_setEventListeners","_inputList","forEach","item","_hideInputError","_toggleSubmitButtonState","_submitButton","_hasInvalidInput","_buttonElement","classList","add","setAttribute","remove","removeAttribute","some","validity","valid","inputElement","_showInputError","validationMessage","errorElement","_getErrorElement","textContent","errorMessage","inputList","Array","from","querySelectorAll","buttonElement","querySelector","name","_checkInputValidity","validationConfig","formSelector","validationForLoginConfig","Login","handleLogin","React","useState","email","password","data","setData","history","useHistory","isInfoBoxOpened","setIsInfoBoxOpened","setIsSuccess","validatorRef","useRef","handleChange","target","value","useEffect","form","document","forms","login","current","enableValidation","onSubmit","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","auth","token","localStorage","setItem","push","catch","err","console","log","noValidate","required","pattern","minLength","maxLength","autoComplete","onChange","placeholder","Register","Header","onLogout","page","useParams","logoPath","renderHeader","CurrentUserContext","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","i","cardLikeButtonClassName","link","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","aria-label","about","map","key","Footer","PopupWithForm","title","submitText","children","EditProfilePopup","onUpdateUser","setName","description","setDescription","submitButtonText","setSubmitButtonText","edit","clearErrors","e","ImagePopup","Object","keys","api","userURL","cardsURL","_userURL","_cardsURL","_token","authorization","id","cardDeleteURL","cardLikeURL","url","EditAvatarPopup","onUpdateAvatar","avatarRef","ref","AddPlacePopup","setTitle","setLink","ConfirmPopup","onConfirm","ErrorPopup","message","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","addPlacePopupSubmitButtonText","setAddPlacePopupSubmitButtonText","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","willBeDeletedCard","setWillBeDeletedCard","setErrorMessage","setCurrentUser","setCards","isLoggedIn","setIsLoggedIn","setEmail","closeAllPopups","dataDownload","userDownload","cardsDownload","all","user","setTimeout","getItem","Provider","exact","path","removeItem","changeLikeCardStatus","newCard","newCards","c","profileDataUpload","newCardUpload","finally","avatarUpload","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.4df4885c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  return (\r\n    <Route>\r\n      {props.loggedIn ? <Component {...props} /> : <Redirect to='/sign-in' />}\r\n    </Route>\r\n  )\r\n}\r\nexport default ProtectedRoute;\r\n","export default __webpack_public_path__ + \"static/media/close-icon.b9c42c3d.svg\";","export default __webpack_public_path__ + \"static/media/yes.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/no.df8eddf6.svg\";","import React from 'react';\nimport closeButtonPath from '../images/close-icon.svg';\nimport yesPath from '../images/yes.svg';\nimport noPath from '../images/no.svg';\n\n//import logoPath from '../images/logo.svg';\n\nfunction InfoTooltip({ isSuccess, isOpen, onClose }) {\n\n  const className = `popup popup_type_input ${isOpen && 'popup_opened'}`;\n  const centeredText = { textAlign: 'center' };\n  return (\n    <div className={className}>\n      <div className='popup__container popup__container_type_input popup__container_type_info'>\n        <img src={isSuccess ? yesPath : noPath} alt=\"успешно\" />\n        <p className='popup__text' style={centeredText} >\n          {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}\n        </p>\n        <button\n          type=\"reset\"\n          className=\"button popup__close-button popup__close-button_type_input\"\n          onClick={onClose}>\n          <img src={closeButtonPath} alt=\"закрыть\" />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default InfoTooltip;\n","const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst register = ({ email, password }) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        return Promise.reject(`Ошибка  ${res.status}`)\n      }\n    })\n}\n\nconst login = ({ email, password }) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        return Promise.reject(`Ошибка  ${res.status}`)\n      }\n    })\n}\n\nconst checkToken = () => {\n  const token = localStorage.getItem('jwt');\n  if (token) {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return Promise.reject(`Ошибка  ${res.status}`)\n        }\n      })\n  } else {\n    return Promise.reject(`Ошибка `)\n  }\n\n}\n\nexport {\n  register,\n  login,\n  checkToken\n}\n//\n","class Validator {\n\n  constructor(validationData, formElement) {\n    this._inputSelector = validationData.inputSelector;\n    this._submitButtonSelector = validationData.submitButtonSelector;\n    this._inactiveButtonClass = validationData.inactiveButtonClass;\n    this._inputErrorClass = validationData.inputErrorClass;\n    this._errorClass = validationData.errorClass;\n    this._formElement = formElement;\n  }\n\n  enableValidation() {\n    this._getInputList();\n    this._getSubmitButtonElement();\n    this._formElement.addEventListener('submit', (evt) => { evt.preventDefault() });\n    this._setEventListeners();\n  }\n\n  clearErrors() {\n    this._inputList.forEach((item) => { this._hideInputError(item); });\n    this._toggleSubmitButtonState(this._submitButton);\n  }\n\n  _toggleSubmitButtonState() {\n    if (this._hasInvalidInput(this._inputList)) {\n      this._buttonElement.classList.add(this._inactiveButtonClass);\n      this._buttonElement.setAttribute('disabled', true);\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\n      this._buttonElement.removeAttribute('disabled');\n    }\n  }\n  _hasInvalidInput() {\n    if (this._inputList.some(item => !item.validity.valid)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  _checkInputValidity(inputElement) {\n    if (inputElement.validity.valid) {\n      this._hideInputError(inputElement);\n    } else {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    }\n  }\n  _hideInputError(inputElement) {\n    const errorElement = this._getErrorElement(inputElement);\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = '';\n  }\n\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._getErrorElement(inputElement);\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.classList.add(this._errorClass);\n    errorElement.textContent = errorMessage;\n  }\n  _getInputList() {\n    const inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    this._inputList = inputList;\n    return this._inputList;\n  }\n  _getSubmitButtonElement() {\n    const buttonElement = this._formElement.querySelector(this._submitButtonSelector);\n    this._buttonElement = buttonElement;\n    return this._buttonElement;\n  }\n\n  _getErrorElement(inputElement) {\n    const errorElement = this._formElement.querySelector(`.popup__error_type_${inputElement.name}`);\n    return errorElement;\n  }\n\n  _setEventListeners() {\n    this._inputList.forEach((item) => {\n      item.addEventListener('input', () => {\n        this._checkInputValidity(item);\n        this._toggleSubmitButtonState();\n      });\n      item.addEventListener('focus', () => {\n        this._toggleSubmitButtonState();\n      });\n    });\n  }\n}\n\nconst validationConfig = {\n  formSelector: '.popup__container_type_input',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\nconst validationForLoginConfig = {\n  formSelector: '.auth-form',\n  inputSelector: '.auth-form__input',\n  submitButtonSelector: '.auth-form__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\nexport { Validator, validationConfig, validationForLoginConfig };\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/Auth.js';\r\nimport { Validator, validationForLoginConfig } from '../utils/Validator';\r\n\r\nfunction Login({ handleLogin }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const history = useHistory();\r\n  const [isInfoBoxOpened, setIsInfoBoxOpened] = React.useState(false);\r\n  const [isSuccess, setIsSuccess] = React.useState(false);\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.login;\r\n    validatorRef.current = new Validator(validationForLoginConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  function handleClose() {\r\n    setIsInfoBoxOpened(false);\r\n    isSuccess && history.push('/sign-in');\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    auth.login(data)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem('jwt', res.token);\r\n          setData({\r\n            ...data,\r\n            password: ''\r\n          })\r\n          handleLogin(data.email);\r\n          history.push('/');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsSuccess(false);\r\n        setIsInfoBoxOpened(true)\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Header >\r\n        <Link to=\"/sign-up\" className=\"header__link\">Регистрация</Link>\r\n      </Header> */}\r\n      <form\r\n        name='login'\r\n        onSubmit={handleSubmit}\r\n        className=\"auth-form\"\r\n        noValidate>\r\n        <p className=\"auth-form__text\">Вход</p>\r\n        <input\r\n          name=\"email\"\r\n          className=\"auth-form__input\"\r\n          type=\"email\"\r\n          required\r\n          pattern=\"^[\\w\\-\\.]+@[\\w\\-\\.]+\"\r\n          minLength=\"3\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_email\"></span>\r\n        <input\r\n          name=\"password\"\r\n          className=\"auth-form__input\"\r\n          type=\"password\"\r\n          required\r\n          pattern=\"^[\\w\\-\\.#$%&*]+\"\r\n          minLength=\"3\"\r\n          maxLength=\"25\"\r\n          autoComplete=\"off\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_password\"></span>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button auth-form__save-button\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n      <InfoTooltip isOpen={isInfoBoxOpened} isSuccess={isSuccess} onClose={handleClose} />\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/Auth.js';\r\nimport { Validator, validationForLoginConfig } from '../utils/Validator';\r\n\r\nfunction Register() {\r\n  const history = useHistory({});\r\n\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [isInfoBoxOpened, setIsInfoBoxOpened] = React.useState(false);\r\n  const [isSuccess, setIsSuccess] = React.useState(false);\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.login;\r\n    validatorRef.current = new Validator(validationForLoginConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleClose() {\r\n    setIsInfoBoxOpened(false);\r\n    isSuccess && history.push('/sign-in');\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    auth.register(data)\r\n      .then((res) => {\r\n        setIsSuccess(true);\r\n        setIsInfoBoxOpened(true);\r\n      })\r\n      .catch((err) => {\r\n        setIsSuccess(false);\r\n        setIsInfoBoxOpened(true)\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n\r\n      <form\r\n        name='login'\r\n        onSubmit={handleSubmit}\r\n        className=\"auth-form\"\r\n        noValidate>\r\n        <p className=\"auth-form__text\">Регистрация</p>\r\n        <input\r\n          name=\"email\"\r\n          className=\"auth-form__input\"\r\n          type=\"email\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_email\"></span>\r\n        <input\r\n          name=\"password\"\r\n          className=\"auth-form__input\"\r\n          type=\"password\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          autoComplete=\"off\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_password\"></span>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button auth-form__save-button\">\r\n          Зарегистрироваться\r\n          </button>\r\n        <Link to=\"/sign-in\" className=\"auth-form__link\">Уже зарегистрированы? Войти.</Link>\r\n      </form>\r\n      <InfoTooltip isOpen={isInfoBoxOpened} isSuccess={isSuccess} onClose={handleClose} />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import React from 'react';\r\nimport logoPath from '../images/logo.svg';\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nfunction Header({ email, onLogout }) {\r\n  let { page } = useParams();\r\n\r\n  function renderHeader() {\r\n    if (email) {\r\n      return (<div className=\"header__info-box\">\r\n        <p className=\"header__link\">{email} </p>\r\n        <button className=\"header__link header__link_theme_grey\" onClick={onLogout}>Выйти </button>\r\n      </div>);\r\n    } else {\r\n      switch (page) {\r\n        case 'sign-in': return (<Link to=\"/sign-up\" className=\"header__link\">Регистрация</Link>);\r\n        case 'sign-up': return (<Link to=\"/sign-in\" className=\"header__link\">Вход</Link>);\r\n        default: return (<Link to=\"/sign-in\" className=\"header__link\">Вход</Link>);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\" >\r\n      <img className=\"logo\" alt=\"Место в России\" src={logoPath} />\r\n      {renderHeader()}\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;\n","import React from 'react';\r\nimport CurrentUserContext  from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n  const currentUser= React.useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n  );\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `button card__like-button ${isLiked&& 'card__like-button_pressed'}`;\r\n    function handleClick(){\r\n        onCardClick(card);\r\n    }\r\n    function handleLike(){\r\n      onCardLike(card);\r\n  }\r\n  function handleDelete(){\r\n    onCardDelete(card);\r\n}\r\n    return (\r\n        <li className=\"card\">\r\n          <img src={card.link} alt=\"\" className=\"card__image\" onClick={handleClick}/>\r\n          <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDelete}/>\r\n          <div className=\"card__caption\">\r\n            <h2 className=\"card__title\">{card.name}</h2>\r\n            <div className=\"card__like-container\">\r\n              <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLike}/>\r\n              <p className=\"card__like-counter\">{card.likes.length}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img src={currentUser.avatar} alt=\"фото профиля\" className=\"profile__avatar\" onClick={onEditAvatar} />\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"button profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={onEditProfile} />\r\n          <p className=\"profile__occupation\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"button profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => (\r\n            <Card\r\n              key={item._id}\r\n              card={item}\r\n              onCardClick={onCardClick}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\nfunction PopupWithForm({ title, name, submitText, isOpen, onClose, onSubmit, children }) {\r\n  const className = `popup popup_type_${name} ${isOpen && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <form\r\n        name={name}\r\n        onSubmit={onSubmit}\r\n        className=\"popup__container popup__container_type_input\"\r\n        noValidate>\r\n        <p className=\"popup__text\">{title}</p>\r\n        {children}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button popup__save-button\">\r\n          {submitText}\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"button popup__close-button popup__close-button_type_input\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { Validator, validationConfig } from '../utils/Validator';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState('');\r\n  const [description, setDescription] = React.useState('');\r\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.edit;\r\n    validatorRef.current = new Validator(validationConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    setSubmitButtonText('Сохранить');\r\n  }, [currentUser]);\r\n\r\n  React.useEffect(() => {\r\n    setSubmitButtonText('Сохранить');\r\n  }, [isOpen]);\r\n\r\n  function handleNameInput(e) {\r\n    setName(e.target.value);\r\n  }\r\n  function handleDescriptionInput(e) {\r\n    setDescription(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    setSubmitButtonText('Сохранение...');\r\n    e.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n  function handleClose() {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n    validatorRef.current.clearErrors();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Редактировать профиль\"\r\n      name=\"edit\"\r\n      submitText={submitButtonText}\r\n      onClose={handleClose}\r\n      onSubmit={handleSubmit}\r\n      isOpen={isOpen}\r\n    >\r\n      <input\r\n        name=\"name\"\r\n        className=\"popup__input popup__input_type_name\"\r\n        type=\"text\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"40\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleNameInput}\r\n      />\r\n      <span className=\"popup__error popup__error_type_name\"></span>\r\n      <input\r\n        name=\"occupation\"\r\n        className=\"popup__input popup__input_type_occupation\"\r\n        type=\"text\"\r\n        required\r\n        minLength=\"2\"\r\n        maxLength=\"200\"\r\n        autoComplete=\"off\"\r\n        value={description}\r\n        onChange={handleDescriptionInput}\r\n      />\r\n      <span className=\"popup__error popup__error_type_occupation\"></span>\r\n    </PopupWithForm>\r\n  )\r\n}\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  const className = `popup popup_type_image ${(Object.keys(card).length !== 0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"popup__container popup__container_type_picture\">\r\n        <button\r\n          className=\"button popup__close-button popup__close-button_type_picture\"\r\n          type=\"reset\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n        <img src={card.link} alt=\"\" className=\"popup__image\" />\r\n        <p className=\"popup__subtitle\">{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n"," class Api {\n     constructor({ userURL, cardsURL, token }) {\n         this._userURL = userURL;\n         this._cardsURL = cardsURL;\n         this._token = token;\n     }\n     userDownload() {\n         return fetch(this._userURL, {\n                 method: 'GET',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then((res) => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки данных пользователя ${res.status}`);\n                 }\n             });\n     }\n\n\n     cardsDownload() {\n         return fetch(this._cardsURL, {\n                 method: 'GET',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка связи с сервером ${res.status}`);\n                 }\n\n             })\n     }\n\n\n     profileDataUpload(name, about) {\n         return fetch(this._userURL, {\n                 method: 'PATCH',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json',\n                 },\n                 body: JSON.stringify({\n                     name: name,\n                     about: about\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки данных пользователя на сервер ${res.status}`);\n                 }\n             })\n     }\n     newCardUpload(name, link) {\n         return fetch(this._cardsURL, {\n                 method: 'POST',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json',\n                 },\n                 body: JSON.stringify({\n                     name: name,\n                     link: link\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки карточки на сервер ${res.status}`);\n                 }\n             })\n     }\n\n     deleteCard(id) {\n         const cardDeleteURL = (this._cardsURL + `/${id}`);\n         return fetch(cardDeleteURL, {\n                 method: 'DELETE',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка удаления карточки');\n                 }\n             })\n     }\n\n     changeLikeCardStatus(id, isLiked){\n       const cardLikeURL = (this._cardsURL + `/likes/${id}`);\n      if(isLiked){\n         return fetch(cardLikeURL, {\n                 method: 'DELETE',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка связи с сервером');\n                 }\n             })\n     }else{\n      return fetch(cardLikeURL, {\n              method: 'PUT',\n              headers: {\n                  authorization: this._token\n              }\n          })\n          .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject('Ошибка связи с сервером');\n              }\n          })\n      }\n     }\n\n     avatarUpload(url) {\n         return fetch((this._userURL + `/avatar`), {\n                 method: 'PATCH',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json'\n                 },\n                 body: JSON.stringify({\n                     avatar: url.link,\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка загрузки аватара');\n                 }\n             })\n     }\n }\n\n const apiConfig = {\n     userURL: 'https://mesto.nomoreparties.co/v1/cohort-15/users/me',\n     cardsURL: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\n     token: 'e6bf7ea4-0157-47ee-b8f8-bf17d3b13ba1'\n }\n\n const api = new Api(apiConfig);\n export default api;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { Validator, validationConfig } from '../utils/Validator';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const avatarRef = React.useRef();\n  const validatorRef = React.useRef();\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\n\n  React.useEffect(() => {\n    setSubmitButtonText('Сохранить');\n  }, [isOpen, setSubmitButtonText]);\n\n  React.useEffect(() => {\n    const form = document.forms.avatar;\n    validatorRef.current = new Validator(validationConfig, form);\n    validatorRef.current.enableValidation();\n  }, []);\n\n  function handleSubmit(e) {\n    setSubmitButtonText('Сохранение...');\n    e.preventDefault();\n    onUpdateAvatar(avatarRef.current.value);\n  }\n  function handleClose() {\n    avatarRef.current = '';\n    validatorRef.current.clearErrors();\n    onClose();\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Обновить аватар\"\n      name=\"avatar\"\n      submitText={submitButtonText}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n    >\n      <input\n        ref={avatarRef}\n        name=\"link\"\n        className=\"popup__input popup__input_type_link\"\n        type=\"url\"\n        required\n        placeholder=\"ссылка на картинку\"\n        autoComplete=\"off\"\n      />\n      <span className=\"popup__error popup__error_type_link\"></span>\n    </PopupWithForm>\n  )\n}\nexport default EditAvatarPopup;\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { Validator, validationConfig } from '../utils/Validator';\r\n\r\nfunction AddPlacePopup({ isOpen, submitButtonText, onClose, onAddPlace }) {\r\n  const [title, setTitle] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    setTitle('');\r\n    setLink('');\r\n  }, [isOpen, setTitle, setLink]);\r\n\r\n  React.useEffect(() => {\r\n    const form = document.querySelector('form[name=\"new-card\"]');\r\n    validatorRef.current = new Validator(validationConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleTitleInput(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleLinkInput(e) {\r\n    setLink(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(title, link);\r\n  }\r\n  function handleClose() {\r\n    validatorRef.current.clearErrors();\r\n    onClose();\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"new-card\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        value={title}\r\n        onChange={handleTitleInput}\r\n        name=\"place\"\r\n        className=\"popup__input popup__input_type_place\"\r\n        type=\"text\"\r\n        placeholder=\"название\"\r\n        required\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_place\"></span>\r\n      <input\r\n        value={link}\r\n        onChange={handleLinkInput}\r\n        name=\"link\"\r\n        className=\"popup__input popup__input_type_link\"\r\n        type=\"url\"\r\n        required\r\n        placeholder=\"ссылка на картинку\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_link\"></span>\r\n    </PopupWithForm>\r\n\r\n  )\r\n}\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({ isOpen, onClose, onConfirm }) {\r\n  const [submitButtonText, setSubmitButtonText] = React.useState('Да');\r\n\r\n  function handleSubmit(e) {\r\n    setSubmitButtonText('Удаление...');\r\n    e.preventDefault();\r\n    onConfirm();\r\n  }\r\n  React.useEffect(() => {\r\n    setSubmitButtonText('Да');\r\n  }, [isOpen, setSubmitButtonText]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Вы уверены?\"\r\n      name=\"confirm\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n    </PopupWithForm>\r\n  )\r\n}\r\nexport default ConfirmPopup;\r\n","import React from 'react';\r\n\r\nfunction ErrorPopup({message}) {\r\n  const className = `popup popup_type_error ${(message.length !==0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <p className=\"popup__message\">{message}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default ErrorPopup;\r\n","import React from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api';\r\nimport * as auth from '../utils/Auth.js';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport ConfirmPopup from './ConfirmPopup';\r\nimport ErrorPopup from './ErrorPopup';\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n\r\n  //Поднимаю стейт с текстом кнопки сабмита, чтобы иметь возможность возвратить ее в исходное\r\n  //состояние при ошибке загрузки новой карточки (не сбрасывая поля ввода на форме)\r\n  const [addPlacePopupSubmitButtonText, setAddPlacePopupSubmitButtonText] = React.useState('Сохранить');\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [willBeDeletedCard, setWillBeDeletedCard] = React.useState({});\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\r\n  const [cards, setCards] = React.useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [email, setEmail] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    const userFromServer = api.userDownload();\r\n    const cardsFromServer = api.cardsDownload();\r\n    const dataDownload = [userFromServer, cardsFromServer];\r\n    Promise.all(dataDownload)\r\n      .then(([user, cards]) => {\r\n        setCurrentUser(user);\r\n        setCards(cards);\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Не удалось загрузить данные');\r\n        setTimeout(() => { setErrorMessage('') }, 2000);\r\n      });\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    checkAuth();\r\n  }, [])\r\n\r\n  function checkAuth() {\r\n    auth.checkToken()\r\n      .then((res) => {\r\n        handleLogin(res.data.email);\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        history.push('/sign-in');\r\n      });\r\n  }\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Ошибка связи с сервером');\r\n        setTimeout(() => { setErrorMessage('') }, 2000);\r\n      });\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    setIsConfirmPopupOpen(true);\r\n    setWillBeDeletedCard(card);\r\n  }\r\n\r\n  function handleDeleteCardConfirmation() {\r\n    const isOwn = willBeDeletedCard.owner._id === currentUser._id;\r\n    if (isOwn) {\r\n      api.deleteCard(willBeDeletedCard._id)\r\n        .then(() => {\r\n          const newCards = cards.filter((c) => {\r\n            return (c._id !== willBeDeletedCard._id);\r\n          });\r\n          setCards(newCards);\r\n          closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n          setErrorMessage('Не удалось удалить карточку');\r\n          setIsConfirmPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\r\n          setIsConfirmPopupOpen(true);  // текст кнопки сабмита на исходный\r\n          setTimeout(() => { setErrorMessage('') }, 2000);\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsConfirmPopupOpen(false);\r\n    setSelectedCard({});\r\n    setWillBeDeletedCard({});\r\n  }\r\n\r\n  function handleUpdateUser({ name, about }) {\r\n    api.profileDataUpload(name, about)\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Не удалось обновить данные на сервере')\r\n        setIsEditProfilePopupOpen(false);//Закрытие и повторное открытие окна сбрасывает\r\n        setIsEditProfilePopupOpen(true); // текст кнопки сабмита на исходный\r\n        setTimeout(() => { setErrorMessage('') }, 2000);\r\n      });\r\n  }\r\n\r\n  function handleUpdateAvatar(link) {\r\n    api.avatarUpload({ link: link })\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Не удалось обновить фото профиля');\r\n        setIsEditAvatarPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\r\n        setIsEditAvatarPopupOpen(true);  // текст кнопки сабмита на исходный\r\n        setTimeout(() => { setErrorMessage('') }, 2000);\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(title, link) {\r\n    setAddPlacePopupSubmitButtonText('Сохранение...')\r\n    api.newCardUpload(title, link)\r\n      .then((res) => {\r\n        setCards([res, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessage('Ошибка связи с сервером');\r\n        setTimeout(() => { setErrorMessage('') }, 2000);\r\n      })\r\n      .finally(() => {\r\n        setAddPlacePopupSubmitButtonText('Сохранить');\r\n      });\r\n  }\r\n\r\n  function handleLogin(email) {\r\n    setIsLoggedIn(true);\r\n    setEmail(email);\r\n  }\r\n  function handleLogout() {\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('jwt');\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"App\">\r\n        <div className=\"body\">\r\n          <Switch>\r\n            <Route exact path='/'>\r\n              <Header email={email} onLogout={handleLogout} />\r\n            </Route>\r\n            <Route path='/:page'>\r\n              <Header />\r\n            </Route>\r\n          </Switch>\r\n          <Switch>\r\n            <Route path='/sign-up'>\r\n              <Register />\r\n            </Route>\r\n            <Route path='/sign-in'>\r\n              <Login handleLogin={handleLogin} />\r\n            </Route>\r\n            <ProtectedRoute\r\n              path='/'\r\n              onEditProfile={handleEditProfileClick}\r\n              onAddPlace={handleAddPlaceClick}\r\n              onEditAvatar={handleEditAvatarClick}\r\n              onCardClick={handleCardClick}\r\n              cards={cards}\r\n              onCardLike={handleCardLike}\r\n              onCardDelete={handleCardDelete}\r\n              loggedIn={isLoggedIn}\r\n              component={Main}\r\n            />\r\n          </Switch>\r\n          <Footer />\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateUser={handleUpdateUser} />\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            submitButtonText={addPlacePopupSubmitButtonText}\r\n            onClose={closeAllPopups}\r\n            onAddPlace={handleAddPlaceSubmit} />\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n          <ConfirmPopup\r\n            isOpen={isConfirmPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onConfirm={handleDeleteCardConfirmation}\r\n          />\r\n          <ImagePopup\r\n            card={selectedCard}\r\n            onClose={closeAllPopups}\r\n          />\r\n          <ErrorPopup\r\n            message={errorMessage}\r\n          />\r\n        </div>\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}