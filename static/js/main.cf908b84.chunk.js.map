{"version":3,"sources":["components/ProtectedRoute.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","images/close-icon.svg","components/PopupWithForm.js","utils/Validator.js","components/EditProfilePopup.js","components/ImagePopup.js","utils/Api.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmPopup.js","components/ErrorPopup.js","components/Home.js","images/yes.svg","images/no.svg","components/InfoTooltip.js","utils/Auth.js","components/Login.js","components/Register.js","components/App.js","serviceWorker.js","index.js"],"names":["ProtectedRoute","Component","component","props","console","log","loggedIn","to","Header","children","className","alt","src","logoPath","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","onClick","type","name","length","Main","onEditProfile","onAddPlace","onEditAvatar","cards","avatar","aria-label","about","map","item","key","Footer","PopupWithForm","title","submitText","isOpen","onClose","onSubmit","noValidate","closeButtonPath","Validator","validationData","formElement","this","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_formElement","_getInputList","_getSubmitButtonElement","addEventListener","evt","preventDefault","_setEventListeners","_inputList","forEach","_hideInputError","_toggleSubmitButtonState","_submitButton","_hasInvalidInput","_buttonElement","classList","add","setAttribute","remove","removeAttribute","validity","valid","inputElement","_showInputError","validationMessage","errorElement","_getErrorElement","textContent","errorMessage","inputList","Array","from","querySelectorAll","buttonElement","querySelector","_checkInputValidity","validationConfig","formSelector","validationForLoginConfig","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","submitButtonText","setSubmitButtonText","validatorRef","useRef","useEffect","form","document","forms","edit","current","enableValidation","clearErrors","e","required","minLength","maxLength","autoComplete","value","onChange","target","ImagePopup","Object","keys","api","userURL","cardsURL","token","_userURL","_cardsURL","_token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","body","JSON","stringify","id","cardDeleteURL","cardLikeURL","url","EditAvatarPopup","onUpdateAvatar","avatarRef","ref","placeholder","AddPlacePopup","setTitle","setLink","ConfirmPopup","onConfirm","ErrorPopup","message","Home","email","onLogout","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","addPlacePopupSubmitButtonText","setAddPlacePopupSubmitButtonText","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isConfirmPopupOpen","setIsConfirmPopupOpen","selectedCard","setSelectedCard","willBeDeletedCard","setWillBeDeletedCard","setErrorMessage","setCurrentUser","setCards","closeAllPopups","dataDownload","userDownload","cardsDownload","all","user","catch","err","setTimeout","path","Provider","changeLikeCardStatus","newCard","newCards","c","profileDataUpload","newCardUpload","finally","avatarUpload","deleteCard","filter","InfoTooltip","isSuccess","yesPath","noPath","style","textAlign","BASE_URL","Login","handleLogin","password","data","setData","history","useHistory","isInfoBoxOpened","setIsInfoBoxOpened","setIsSuccess","handleChange","login","localStorage","getItem","auth","push","setItem","pattern","Register","App","isLoggedIn","setIsLoggedIn","setEmail","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cf908b84.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  console.log(props);\n  console.log(Component);\n  return (\n    <Route>\n      {props.loggedIn ? <Component {...props} /> : <Redirect to='/sign-in' />}\n    </Route>\n  )\n}\nexport default ProtectedRoute;\n","export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import React from 'react';\nimport logoPath from '../images/logo.svg';\n\nfunction Header({ children }) {\n  return (\n    <header className=\"header\" >\n      <img className=\"logo\" alt=\"Место в России\" src={logoPath} />\n      {children}\n    </header>\n  );\n}\nexport default Header;\n","import React from 'react';\nconst CurrentUserContext = React.createContext();\nexport default CurrentUserContext;\n","import React from 'react';\r\nimport CurrentUserContext  from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\r\n  const currentUser= React.useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const cardDeleteButtonClassName = (\r\n    `button card__delete-button ${isOwn ? 'card__delete-button_visible' : 'card__delete-button_hidden'}`\r\n  );\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  const cardLikeButtonClassName = `button card__like-button ${isLiked&& 'card__like-button_pressed'}`;\r\n    function handleClick(){\r\n        onCardClick(card);\r\n    }\r\n    function handleLike(){\r\n      onCardLike(card);\r\n  }\r\n  function handleDelete(){\r\n    onCardDelete(card);\r\n}\r\n    return (\r\n        <li className=\"card\">\r\n          <img src={card.link} alt=\"\" className=\"card__image\" onClick={handleClick}/>\r\n          <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleDelete}/>\r\n          <div className=\"card__caption\">\r\n            <h2 className=\"card__title\">{card.name}</h2>\r\n            <div className=\"card__like-container\">\r\n              <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLike}/>\r\n              <p className=\"card__like-counter\">{card.likes.length}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n    );\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport Card from './Card';\r\n\r\nfunction Main({ onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete }) {\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <img src={currentUser.avatar} alt=\"фото профиля\" className=\"profile__avatar\" onClick={onEditAvatar} />\r\n        <div className=\"profile__info\">\r\n          <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n          <button className=\"button profile__edit-button\" type=\"button\" aria-label=\"Редактировать профиль\" onClick={onEditProfile} />\r\n          <p className=\"profile__occupation\">{currentUser.about}</p>\r\n        </div>\r\n        <button className=\"button profile__add-button\" type=\"button\" aria-label=\"Добавить\" onClick={onAddPlace} />\r\n\r\n      </section>\r\n      <section>\r\n        <ul className=\"cards\">\r\n          {cards.map((item) => (\r\n            <Card\r\n              key={item._id}\r\n              card={item}\r\n              onCardClick={onCardClick}\r\n              onCardLike={onCardLike}\r\n              onCardDelete={onCardDelete} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\nexport default Main;\r\n","import React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n          <p className=\"footer__copyright\">&copy;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/close-icon.b9c42c3d.svg\";","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\nfunction PopupWithForm({ title, name, submitText, isOpen, onClose, onSubmit, children }) {\r\n  const className = `popup popup_type_${name} ${isOpen && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <form\r\n        name={name}\r\n        onSubmit={onSubmit}\r\n        className=\"popup__container popup__container_type_input\"\r\n        noValidate>\r\n        <p className=\"popup__text\">{title}</p>\r\n        {children}\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button popup__save-button\">\r\n          {submitText}\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"button popup__close-button popup__close-button_type_input\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\nexport default PopupWithForm;\r\n","class Validator {\n\n  constructor(validationData, formElement) {\n    this._inputSelector = validationData.inputSelector;\n    this._submitButtonSelector = validationData.submitButtonSelector;\n    this._inactiveButtonClass = validationData.inactiveButtonClass;\n    this._inputErrorClass = validationData.inputErrorClass;\n    this._errorClass = validationData.errorClass;\n    this._formElement = formElement;\n  }\n\n  enableValidation() {\n    this._getInputList();\n    this._getSubmitButtonElement();\n    this._formElement.addEventListener('submit', (evt) => { evt.preventDefault() });\n    this._setEventListeners();\n  }\n\n  clearErrors() {\n    this._inputList.forEach((item) => { this._hideInputError(item); });\n    this._toggleSubmitButtonState(this._submitButton);\n  }\n\n  _toggleSubmitButtonState() {\n    if (this._hasInvalidInput(this._inputList)) {\n      this._buttonElement.classList.add(this._inactiveButtonClass);\n      this._buttonElement.setAttribute('disabled', true);\n    } else {\n      this._buttonElement.classList.remove(this._inactiveButtonClass);\n      this._buttonElement.removeAttribute('disabled');\n    }\n  }\n  _hasInvalidInput() {\n    if (this._inputList.some(item => !item.validity.valid)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  _checkInputValidity(inputElement) {\n    if (inputElement.validity.valid) {\n      this._hideInputError(inputElement);\n    } else {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    }\n  }\n  _hideInputError(inputElement) {\n    const errorElement = this._getErrorElement(inputElement);\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = '';\n  }\n\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._getErrorElement(inputElement);\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.classList.add(this._errorClass);\n    errorElement.textContent = errorMessage;\n  }\n  _getInputList() {\n    const inputList = Array.from(this._formElement.querySelectorAll(this._inputSelector));\n    this._inputList = inputList;\n    return this._inputList;\n  }\n  _getSubmitButtonElement() {\n    const buttonElement = this._formElement.querySelector(this._submitButtonSelector);\n    this._buttonElement = buttonElement;\n    return this._buttonElement;\n  }\n\n  _getErrorElement(inputElement) {\n    const errorElement = this._formElement.querySelector(`.popup__error_type_${inputElement.name}`);\n    return errorElement;\n  }\n\n  _setEventListeners() {\n    this._inputList.forEach((item) => {\n      item.addEventListener('input', () => {\n        this._checkInputValidity(item);\n        this._toggleSubmitButtonState();\n      });\n      item.addEventListener('focus', () => {\n        this._toggleSubmitButtonState();\n      });\n    });\n  }\n}\n\nconst validationConfig = {\n  formSelector: '.popup__container_type_input',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\nconst validationForLoginConfig = {\n  formSelector: '.auth-form',\n  inputSelector: '.auth-form__input',\n  submitButtonSelector: '.auth-form__save-button',\n  inactiveButtonClass: 'popup__save-button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible'\n};\n\nexport { Validator, validationConfig, validationForLoginConfig };\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { Validator, validationConfig } from '../utils/Validator';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\n  const validatorRef = React.useRef();\n\n  React.useEffect(() => {\n    const form = document.forms.edit;\n    validatorRef.current = new Validator(validationConfig, form);\n    validatorRef.current.enableValidation();\n  }, []);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    setSubmitButtonText('Сохранить');\n  }, [currentUser]);\n\n  React.useEffect(() => {\n    setSubmitButtonText('Сохранить');\n  }, [isOpen]);\n\n  function handleNameInput(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionInput(e) {\n    setDescription(e.target.value);\n  }\n  function handleSubmit(e) {\n    setSubmitButtonText('Сохранение...');\n    e.preventDefault();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n  function handleClose() {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n    validatorRef.current.clearErrors();\n    onClose();\n  }\n  console.log(currentUser);\n  return (\n    <PopupWithForm\n      title=\"Редактировать профиль\"\n      name=\"edit\"\n      submitText={submitButtonText}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n    >\n      <input\n        name=\"name\"\n        className=\"popup__input popup__input_type_name\"\n        type=\"text\"\n        required\n        minLength=\"2\"\n        maxLength=\"40\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleNameInput}\n      />\n      <span className=\"popup__error popup__error_type_name\"></span>\n      <input\n        name=\"occupation\"\n        className=\"popup__input popup__input_type_occupation\"\n        type=\"text\"\n        required\n        minLength=\"2\"\n        maxLength=\"200\"\n        autoComplete=\"off\"\n        value={description}\n        onChange={handleDescriptionInput}\n      />\n      <span className=\"popup__error popup__error_type_occupation\"></span>\n    </PopupWithForm>\n  )\n}\nexport default EditProfilePopup;\n","import React from 'react';\r\nimport closeButtonPath from '../images/close-icon.svg';\r\n\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n  const className = `popup popup_type_image ${(Object.keys(card).length !== 0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"popup__container popup__container_type_picture\">\r\n        <button\r\n          className=\"button popup__close-button popup__close-button_type_picture\"\r\n          type=\"reset\"\r\n          onClick={onClose}>\r\n          <img src={closeButtonPath} alt=\"закрыть\" />\r\n        </button>\r\n        <img src={card.link} alt=\"\" className=\"popup__image\" />\r\n        <p className=\"popup__subtitle\">{card.name}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ImagePopup;\r\n"," class Api {\n     constructor({ userURL, cardsURL, token }) {\n         this._userURL = userURL;\n         this._cardsURL = cardsURL;\n         this._token = token;\n     }\n     userDownload() {\n         return fetch(this._userURL, {\n                 method: 'GET',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then((res) => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки данных пользователя ${res.status}`);\n                 }\n             });\n     }\n\n\n     cardsDownload() {\n         return fetch(this._cardsURL, {\n                 method: 'GET',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка связи с сервером ${res.status}`);\n                 }\n\n             })\n     }\n\n\n     profileDataUpload(name, about) {\n         return fetch(this._userURL, {\n                 method: 'PATCH',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json',\n                 },\n                 body: JSON.stringify({\n                     name: name,\n                     about: about\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки данных пользователя на сервер ${res.status}`);\n                 }\n             })\n     }\n     newCardUpload(name, link) {\n         return fetch(this._cardsURL, {\n                 method: 'POST',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json',\n                 },\n                 body: JSON.stringify({\n                     name: name,\n                     link: link\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject(`Ошибка загрузки карточки на сервер ${res.status}`);\n                 }\n             })\n     }\n\n     deleteCard(id) {\n         const cardDeleteURL = (this._cardsURL + `/${id}`);\n         return fetch(cardDeleteURL, {\n                 method: 'DELETE',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка удаления карточки');\n                 }\n             })\n     }\n\n     changeLikeCardStatus(id, isLiked){\n       const cardLikeURL = (this._cardsURL + `/likes/${id}`);\n      if(isLiked){\n         return fetch(cardLikeURL, {\n                 method: 'DELETE',\n                 headers: {\n                     authorization: this._token\n                 }\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка связи с сервером');\n                 }\n             })\n     }else{\n      return fetch(cardLikeURL, {\n              method: 'PUT',\n              headers: {\n                  authorization: this._token\n              }\n          })\n          .then(res => {\n              if (res.ok) {\n                  return res.json();\n              } else {\n                  return Promise.reject('Ошибка связи с сервером');\n              }\n          })\n      }\n     }\n\n     avatarUpload(url) {\n         return fetch((this._userURL + `/avatar`), {\n                 method: 'PATCH',\n                 headers: {\n                     authorization: this._token,\n                     'Content-Type': 'application/json'\n                 },\n                 body: JSON.stringify({\n                     avatar: url.link,\n                 })\n             })\n             .then(res => {\n                 if (res.ok) {\n                     return res.json();\n                 } else {\n                     return Promise.reject('Ошибка загрузки аватара');\n                 }\n             })\n     }\n }\n\n const apiConfig = {\n     userURL: 'https://mesto.nomoreparties.co/v1/cohort-15/users/me',\n     cardsURL: 'https://mesto.nomoreparties.co/v1/cohort-15/cards',\n     token: 'e6bf7ea4-0157-47ee-b8f8-bf17d3b13ba1'\n }\n\n const api = new Api(apiConfig);\n export default api;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { Validator, validationConfig } from '../utils/Validator';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n  const avatarRef = React.useRef();\n  const validatorRef = React.useRef();\n  const [submitButtonText, setSubmitButtonText] = React.useState('Сохранить');\n\n  React.useEffect(() => {\n    setSubmitButtonText('Сохранить');\n  }, [isOpen, setSubmitButtonText]);\n\n  React.useEffect(() => {\n    const form = document.forms.avatar;\n    validatorRef.current = new Validator(validationConfig, form);\n    validatorRef.current.enableValidation();\n  }, []);\n\n  function handleSubmit(e) {\n    setSubmitButtonText('Сохранение...');\n    e.preventDefault();\n    onUpdateAvatar(avatarRef.current.value);\n  }\n  function handleClose() {\n    avatarRef.current = '';\n    validatorRef.current.clearErrors();\n    onClose();\n  }\n\n  return (\n    <PopupWithForm\n      title=\"Обновить аватар\"\n      name=\"avatar\"\n      submitText={submitButtonText}\n      onClose={handleClose}\n      onSubmit={handleSubmit}\n      isOpen={isOpen}\n    >\n      <input\n        ref={avatarRef}\n        name=\"link\"\n        className=\"popup__input popup__input_type_link\"\n        type=\"url\"\n        required\n        placeholder=\"ссылка на картинку\"\n        autoComplete=\"off\"\n      />\n      <span className=\"popup__error popup__error_type_link\"></span>\n    </PopupWithForm>\n  )\n}\nexport default EditAvatarPopup;\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { Validator, validationConfig } from '../utils/Validator';\r\n\r\nfunction AddPlacePopup({ isOpen, submitButtonText, onClose, onAddPlace }) {\r\n  const [title, setTitle] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    setTitle('');\r\n    setLink('');\r\n  }, [isOpen, setTitle, setLink]);\r\n\r\n  React.useEffect(() => {\r\n    const form = document.querySelector('form[name=\"new-card\"]');\r\n    validatorRef.current = new Validator(validationConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleTitleInput(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n  function handleLinkInput(e) {\r\n    setLink(e.target.value);\r\n  }\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onAddPlace(title, link);\r\n  }\r\n  function handleClose() {\r\n    validatorRef.current.clearErrors();\r\n    onClose();\r\n  }\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Новое место\"\r\n      name=\"new-card\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={handleClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        value={title}\r\n        onChange={handleTitleInput}\r\n        name=\"place\"\r\n        className=\"popup__input popup__input_type_place\"\r\n        type=\"text\"\r\n        placeholder=\"название\"\r\n        required\r\n        minLength=\"1\"\r\n        maxLength=\"30\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_place\"></span>\r\n      <input\r\n        value={link}\r\n        onChange={handleLinkInput}\r\n        name=\"link\"\r\n        className=\"popup__input popup__input_type_link\"\r\n        type=\"url\"\r\n        required\r\n        placeholder=\"ссылка на картинку\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <span className=\"popup__error popup__error_type_link\"></span>\r\n    </PopupWithForm>\r\n\r\n  )\r\n}\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction ConfirmPopup({ isOpen, onClose, onConfirm }) {\r\n  const [submitButtonText, setSubmitButtonText] = React.useState('Да');\r\n\r\n  function handleSubmit(e) {\r\n    setSubmitButtonText('Удаление...');\r\n    e.preventDefault();\r\n    onConfirm();\r\n  }\r\n  React.useEffect(() => {\r\n    setSubmitButtonText('Да');\r\n  }, [isOpen, setSubmitButtonText]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title=\"Вы уверены?\"\r\n      name=\"confirm\"\r\n      submitText={submitButtonText}\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n    </PopupWithForm>\r\n  )\r\n}\r\nexport default ConfirmPopup;\r\n","import React from 'react';\r\n\r\nfunction ErrorPopup({message}) {\r\n  const className = `popup popup_type_error ${(message.length !==0) && 'popup_opened'}`;\r\n  return (\r\n    <div className={className}>\r\n      <p className=\"popup__message\">{message}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default ErrorPopup;\r\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport EditProfilePopup from './EditProfilePopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmPopup from './ConfirmPopup';\nimport ErrorPopup from './ErrorPopup';\n\n\nfunction Home({ email, onLogout }) {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //Поднимаю стейт с текстом кнопки сабмита, чтобы иметь возможность возвратить ее в исходное\n  //состояние при ошибке загрузки новой карточки (не сбрасывая поля ввода на форме)\n  const [addPlacePopupSubmitButtonText, setAddPlacePopupSubmitButtonText] = React.useState('Сохранить');\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isConfirmPopupOpen, setIsConfirmPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [willBeDeletedCard, setWillBeDeletedCard] = React.useState({});\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const [currentUser, setCurrentUser] = React.useState({ name: '', about: '', avatar: '' });\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    const userFromServer = api.userDownload();\n    const cardsFromServer = api.cardsDownload();\n    const dataDownload = [userFromServer, cardsFromServer];\n    Promise.all(dataDownload)\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((err) => {\n        setErrorMessage('Не удалось загрузить данные');\n        setTimeout(() => { setErrorMessage('') }, 2000);\n      });\n  }, []);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeLikeCardStatus(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        setErrorMessage('Ошибка связи с сервером');\n        setTimeout(() => { setErrorMessage('') }, 2000);\n      });\n  }\n\n  function handleCardDelete(card) {\n    setIsConfirmPopupOpen(true);\n    setWillBeDeletedCard(card);\n  }\n\n  function handleDeleteCardConfirmation() {\n    const isOwn = willBeDeletedCard.owner._id === currentUser._id;\n    if (isOwn) {\n      api.deleteCard(willBeDeletedCard._id)\n        .then(() => {\n          const newCards = cards.filter((c) => {\n            return (c._id !== willBeDeletedCard._id);\n          });\n          setCards(newCards);\n          closeAllPopups();\n        })\n        .catch((err) => {\n          setErrorMessage('Не удалось удалить карточку');\n          setIsConfirmPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\n          setIsConfirmPopupOpen(true);  // текст кнопки сабмита на исходный\n          setTimeout(() => { setErrorMessage('') }, 2000);\n        });\n    }\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsConfirmPopupOpen(false);\n    setSelectedCard({});\n    setWillBeDeletedCard({});\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api.profileDataUpload(name, about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        setErrorMessage('Не удалось обновить данные на сервере')\n        setIsEditProfilePopupOpen(false);//Закрытие и повторное открытие окна сбрасывает\n        setIsEditProfilePopupOpen(true); // текст кнопки сабмита на исходный\n        setTimeout(() => { setErrorMessage('') }, 2000);\n\n      });\n  }\n\n  function handleUpdateAvatar(link) {\n    api.avatarUpload({ link: link })\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        setErrorMessage('Не удалось обновить фото профиля');\n        setIsEditAvatarPopupOpen(false); //Закрытие и повторное открытие окна сбрасывает\n        setIsEditAvatarPopupOpen(true);  // текст кнопки сабмита на исходный\n        setTimeout(() => { setErrorMessage('') }, 2000);\n      })\n  }\n\n  function handleAddPlaceSubmit(title, link) {\n    setAddPlacePopupSubmitButtonText('Сохранение...')\n    api.newCardUpload(title, link)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        setErrorMessage('Ошибка связи с сервером');\n        setTimeout(() => { setErrorMessage('') }, 2000);\n      })\n      .finally(() => {\n        setAddPlacePopupSubmitButtonText('Сохранить');\n      });\n  }\n\n\n  return (\n\n    <Route path='/home'>\n\n      <CurrentUserContext.Provider value={currentUser}>\n\n        <Header >\n          <div className=\"header__info-box\">\n            <p className=\"header__link\">{email} </p>\n            <button className=\"header__link header__link_theme_grey\" onClick={onLogout}>Выйти </button>\n          </div>\n\n        </Header>\n        <Main\n          onEditProfile={handleEditProfileClick}\n          onAddPlace={handleAddPlaceClick}\n          onEditAvatar={handleEditAvatarClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n        />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          submitButtonText={addPlacePopupSubmitButtonText}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit} />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <ConfirmPopup\n          isOpen={isConfirmPopupOpen}\n          onClose={closeAllPopups}\n          onConfirm={handleDeleteCardConfirmation}\n        />\n\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n        <ErrorPopup\n          message={errorMessage}\n        />\n\n      </CurrentUserContext.Provider>\n    </Route>\n  );\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/yes.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/no.df8eddf6.svg\";","import React from 'react';\nimport closeButtonPath from '../images/close-icon.svg';\nimport yesPath from '../images/yes.svg';\nimport noPath from '../images/no.svg';\n\n//import logoPath from '../images/logo.svg';\n\nfunction InfoTooltip({ isSuccess, isOpen, onClose }) {\n\n  const className = `popup popup_type_input ${isOpen && 'popup_opened'}`;\n  const centeredText = { textAlign: 'center' };\n  return (\n    <div className={className}>\n      <div className='popup__container popup__container_type_input popup__container_type_info'>\n        <img src={isSuccess ? yesPath : noPath} alt=\"успешно\" />\n        <p className='popup__text' style={centeredText} >\n          {isSuccess ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}\n        </p>\n        <button\n          type=\"reset\"\n          className=\"button popup__close-button popup__close-button_type_input\"\n          onClick={onClose}>\n          <img src={closeButtonPath} alt=\"закрыть\" />\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default InfoTooltip;\n","const BASE_URL = 'https://auth.nomoreparties.co';\n\nconst register = ({ email, password }) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        return Promise.reject(`Ошибка  ${res.status}`)\n      }\n    })\n}\n\nconst login = ({ email, password }) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password: password,\n      email: email\n    })\n  })\n    .then((res) => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        return Promise.reject(`Ошибка  ${res.status}`)\n      }\n    })\n}\n\nconst checkToken = () => {\n  const token = localStorage.getItem('jwt');\n  if (token) {\n    return fetch(`${BASE_URL}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return Promise.reject(`Ошибка  ${res.status}`)\n        }\n      })\n  } else {\n    return Promise.reject(`Ошибка `)\n  }\n\n}\n\nexport {\n  register,\n  login,\n  checkToken\n}\n//\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/Auth.js';\r\nimport { Validator, validationForLoginConfig } from '../utils/Validator';\r\n\r\nfunction Login({ handleLogin }) {\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const history = useHistory();\r\n  const [isInfoBoxOpened, setIsInfoBoxOpened] = React.useState(false);\r\n  const [isSuccess, setIsSuccess] = React.useState(false);\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.login;\r\n    validatorRef.current = new Validator(validationForLoginConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    checkAuth();\r\n  }, [])\r\n\r\n  function checkAuth() {\r\n    auth.checkToken()\r\n      .then((res) => {\r\n        handleLogin(res.data.email);\r\n        history.push('/home');\r\n      })\r\n      .catch((err) => {\r\n        history.push('/sign-in');\r\n      });\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n    console.log(data);\r\n  }\r\n\r\n  function handleClose() {\r\n    setIsInfoBoxOpened(false);\r\n    isSuccess && history.push('/sign-in');\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    auth.login(data)\r\n      .then((res) => {\r\n        if (res.token) {\r\n          console.log(res);\r\n          localStorage.setItem('jwt', res.token);\r\n          setData({\r\n            ...data,\r\n            password: ''\r\n          })\r\n          handleLogin(data.email);\r\n          console.log('submitting');\r\n          history.push('/home');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setIsSuccess(false);\r\n        setIsInfoBoxOpened(true)\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header >\r\n        <Link to=\"/sign-up\" className=\"header__link\">Регистрация</Link>\r\n      </Header>\r\n      <form\r\n        name='login'\r\n        onSubmit={handleSubmit}\r\n        className=\"auth-form\"\r\n        noValidate>\r\n        <p className=\"auth-form__text\">Вход</p>\r\n        <input\r\n          name=\"email\"\r\n          className=\"auth-form__input\"\r\n          type=\"email\"\r\n          required\r\n          pattern=\"^[\\w\\-\\.]+@[\\w\\-\\.]+\"\r\n          minLength=\"3\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_email\"></span>\r\n        <input\r\n          name=\"password\"\r\n          className=\"auth-form__input\"\r\n          type=\"password\"\r\n          required\r\n          pattern=\"^[\\w\\-\\.#$%&*]+\"\r\n          minLength=\"3\"\r\n          maxLength=\"25\"\r\n          autoComplete=\"off\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_password\"></span>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button auth-form__save-button\">\r\n          Войти\r\n        </button>\r\n      </form>\r\n      <InfoTooltip isOpen={isInfoBoxOpened} isSuccess={isSuccess} onClose={handleClose} />\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport * as auth from '../utils/Auth.js';\r\nimport { Validator, validationForLoginConfig } from '../utils/Validator';\r\n\r\nfunction Register() {\r\n  const history = useHistory({});\r\n\r\n  const [data, setData] = React.useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [isInfoBoxOpened, setIsInfoBoxOpened] = React.useState(false);\r\n  const [isSuccess, setIsSuccess] = React.useState(false);\r\n  const validatorRef = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    const form = document.forms.login;\r\n    validatorRef.current = new Validator(validationForLoginConfig, form);\r\n    validatorRef.current.enableValidation();\r\n  }, []);\r\n\r\n  function handleClose() {\r\n    setIsInfoBoxOpened(false);\r\n    isSuccess && history.push('/sign-in');\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    const { name, value } = evt.target;\r\n    setData({\r\n      ...data,\r\n      [name]: value\r\n    });\r\n    //console.log(data);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    //console.log(data);\r\n    auth.register(data)\r\n      .then((res) => {\r\n        setIsSuccess(true);\r\n        setIsInfoBoxOpened(true);\r\n        //console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        setIsSuccess(false);\r\n        setIsInfoBoxOpened(true)\r\n        //console.log(err);\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n      <Header >\r\n        <Link to=\"/sign-in\" className=\"header__link\">Войти</Link>\r\n      </Header>\r\n\r\n      <form\r\n        name='login'\r\n        onSubmit={handleSubmit}\r\n        className=\"auth-form\"\r\n        noValidate>\r\n        <p className=\"auth-form__text\">Регистрация</p>\r\n        <input\r\n          name=\"email\"\r\n          className=\"auth-form__input\"\r\n          type=\"email\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"40\"\r\n          autoComplete=\"off\"\r\n          value={data.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_email\"></span>\r\n        <input\r\n          name=\"password\"\r\n          className=\"auth-form__input\"\r\n          type=\"password\"\r\n          required\r\n          minLength=\"2\"\r\n          maxLength=\"200\"\r\n          autoComplete=\"off\"\r\n          value={data.password}\r\n          onChange={handleChange}\r\n          placeholder=\"Пароль\"\r\n        />\r\n        <span className=\"popup__error popup__error_type_password\"></span>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button auth-form__save-button\">\r\n          Зарегистрироваться\r\n          </button>\r\n        <Link to=\"/login\" className=\"auth-form__link\">Уже зарегистрированы? Войти.</Link>\r\n      </form>\r\n      <InfoTooltip isOpen={isInfoBoxOpened} isSuccess={isSuccess} onClose={handleClose} />\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Home from './Home';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\n\r\nfunction App() {\r\n  //const history = useHistory();\r\n  //console.log(useHistory());\r\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\r\n  const [email, setEmail] = React.useState('');\r\n\r\n\r\n\r\n\r\n\r\n\r\n  function handleLogin(email) {\r\n    setIsLoggedIn(true);\r\n    setEmail(email);\r\n  }\r\n  function handleLogout() {\r\n    setIsLoggedIn(false);\r\n    localStorage.removeItem('jwt');\r\n    //history.push('/sign-in');\r\n  }\r\n\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <div className=\"body\">\r\n          <Switch>\r\n            <Route path='/sign-up'>\r\n              <Register />\r\n            </Route>\r\n            <Route path='/sign-in'>\r\n              <Login handleLogin={handleLogin} />\r\n            </Route>\r\n            <ProtectedRoute path='/home' loggedIn={isLoggedIn} email={email} onLogout={handleLogout} component={Home} />\r\n            <Route>\r\n              {isLoggedIn ? <Redirect to='/home' /> : <Redirect to='/sign-in' />};\r\n        </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}